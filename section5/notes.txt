================================================================================
Views
================================================================================

--------------------------------------------------------------------------------
Views: An Introduction
--------------------------------------------------------------------------------

- Views just contain presentation code
- Contain PHP and HTML, but just enough PHP to display data
- Easy for a designer to work on the view files separately

--------------------------------------------------------------------------------
Display a View
--------------------------------------------------------------------------------

- The controller doesn't write any output
- It loads and outputs a view file, which is what contains the content
    - HTML, JSON, XML, Etc.

- The view just shows data
    - contains a minimum amount of PHP (echo, if, for, etc.)
    - Has no knowledge of models, sessions, dbs, etc.

--------------------------------------------------------------------------------
Output Escaping
--------------------------------------------------------------------------------

Writing HTML
- You control what HTML is output by your script
- Outputting data you haven't written (eg a users name)
- Outputting html: break layout, XSS attack, etc.

= How Does HTML Work?
- A HTML file contains both content and commands
    - Content: What you see in browser
    - Commands: Markup content, insert images, scripts, etc.
- Commands enclosed in tags (<tag>)
- Writing special characters requires HTML entities
    - < => &lt;
    - > => &gt;
    - & => &amp;
    - " => &quot;
- htmlspecialchars();
    - Prevents XSS attacks by parsing the characters into their html entities

--------------------------------------------------------------------------------
Pass Data from the Controller to the View
--------------------------------------------------------------------------------

The controller passes data to the view
The view simply displays the data

--------------------------------------------------------------------------------
Templating Engines: What they are and how they can improve your PHP code
--------------------------------------------------------------------------------

- Tool that helps separate application code from presentation code
- Templates (views) contain no PHP at all, just HTML and simple tags to show data

- Advantages
    - Simpler, easier syntax
    - Autoescaping of variables
    - Template inheritance -> easier to code common headers and footers
    - No PHP in the templates

--------------------------------------------------------------------------------
Make Views easier to create and maintain: add a template engine
--------------------------------------------------------------------------------

- I just used composer lol

--------------------------------------------------------------------------------
Remove Repetition from View Templates: Add a Base Template
--------------------------------------------------------------------------------

- Template inheritance allows block to be inserted